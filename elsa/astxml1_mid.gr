// astxml0_mid.gr        see License.txt for copyright and terms of use

// This file is the mid part of the generated astxml.gr file.  This
// will be REPLACED with a generated file.

nonterm(void*) Node_TranslationUnit {
  -> v:Mid_TranslationUnit End_TranslationUnit {return v;}
}

nonterm(void*) Mid_TranslationUnit {
  -> v:Open_TranslationUnit {return v;}

  // add one for every tag that can occur in a TranslationUnit
  -> v:Mid_TranslationUnit child:Node_Foo {
    // add a Foo to a TranslationUnit
    printf("add a Foo to a TranslationUnit\n");
    // this no longer works because we are using the real class
    // TranslationUnit
//      static_cast<TranslationUnit*>(v)->foo = static_cast<Foo*>(child);
    return v;
  }
}

nonterm(void*) Open_TranslationUnit {
  -> v:MidOpen_TranslationUnit ">" {return v;}
}

nonterm(void*) MidOpen_TranslationUnit {
  -> v:StartOpen_TranslationUnit {return v;}

  // add one for every attribute of a TranslationUnit
  -> v:MidOpen_TranslationUnit ".id" "=" x:Literal {
    // file the translation unit
    printf("file the translation unit under id %s\n", x);
    return v;
  }

  -> v:MidOpen_TranslationUnit "topForms" "=" x:Literal {
    // modify the object
    printf("see a top-form %s\n", x);
    return v;
  }
}

nonterm(void*) StartOpen_TranslationUnit {
  -> "<" "TranslationUnit" {return new TranslationUnit(NULL);}
}

nonterm End_TranslationUnit {
  -> "<" "/" "TranslationUnit" ">" {}
}

nonterm(void*) Node_Foo {
  -> "<" "Foo" "/" ">" {
    return new Foo();
  }
}

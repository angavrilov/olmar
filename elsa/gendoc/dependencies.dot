// dependency graph automatically produced by
//   ../smbase/scan-depends.pl -r -Xcc_env.h=1 -Xcc_type.h=1 -Xcc_flags.h=1 -Xcc_ast.h=1 -Xvariable.h=1 -Xcc_print.h -Xsprint.h -Xxml_type_reader.h -Xxml_type_writer.h -Xxml_ast_reader.h -Xxml_do_read.h -Xgeneric_aux.h -Xcc_ast_aux.h -Xcc_lang.h=1 main.cc cc_tcheck.cc

digraph "Dependencies" {
  "main.cc" [
  ]
  "parssppt.h" [
    color = white
  ]
  "main.cc" -> "parssppt.h" [
  ]
  "cc_env.h" [
    label = "cc_env.h\n(ubiquitous)"
    style = dashed
  ]
  "main.cc" -> "cc_env.h" [
  ]
  "cc_lang.h" [
    label = "cc_lang.h\n(ubiquitous)"
    style = dashed
  ]
  "main.cc" -> "cc_lang.h" [
  ]
  "cc.gr.gen.h" [
    color = white
  ]
  "main.cc" -> "cc.gr.gen.h" [
  ]
  "cc_elaborate.h" [
    color = white
  ]
  "main.cc" -> "cc_elaborate.h" [
  ]
  "integrity.h" [
    color = white
  ]
  "main.cc" -> "integrity.h" [
  ]
  "xml_file_writer.h" [
    color = white
  ]
  "main.cc" -> "xml_file_writer.h" [
  ]
  "xml_reader.h" [
    color = white
  ]
  "main.cc" -> "xml_reader.h" [
  ]
  "cc_tcheck.cc" [
  ]
  "cc_ast.h" [
    label = "cc_ast.h\n(ubiquitous)"
    style = dashed
  ]
  "cc_tcheck.cc" -> "cc_ast.h" [
  ]
  "stdconv.h" [
    color = white
  ]
  "cc_tcheck.cc" -> "stdconv.h" [
  ]
  "implconv.h" [
    color = white
  ]
  "cc_tcheck.cc" -> "implconv.h" [
  ]
  "overload.h" [
    color = white
  ]
  "cc_tcheck.cc" -> "overload.h" [
  ]
  "generic_amb.h" [
    color = white
  ]
  "cc_tcheck.cc" -> "generic_amb.h" [
  ]
  "implint.h" [
    color = white
  ]
  "cc_tcheck.cc" -> "implint.h" [
  ]
  "ast_build.h" [
    color = white
  ]
  "cc_tcheck.cc" -> "ast_build.h" [
  ]
  "typelistiter.h" [
    color = white
  ]
  "cc_tcheck.cc" -> "typelistiter.h" [
  ]
  "mtype.h" [
    color = white
  ]
  "cc_tcheck.cc" -> "mtype.h" [
  ]
  "parssppt.cc" [
  ]
  "parssppt.h" -> "parssppt.cc" [
    style = dashed
    weight = 10
  ]
  "lexer.h" [
    color = white
  ]
  "parssppt.h" -> "lexer.h" [
  ]
  "cc_env.cc" [
  ]
  "cc_env.h" -> "cc_env.cc" [
    style = dashed
    weight = 10
  ]
  "cc_scope.h" [
    color = white
  ]
  "cc_env.h" -> "cc_scope.h" [
  ]
  "cc_err.h" [
    color = white
  ]
  "cc_env.h" -> "cc_err.h" [
  ]
  "builtinops.h" [
    color = white
  ]
  "cc_env.h" -> "builtinops.h" [
  ]
  "mflags.h" [
    color = white
  ]
  "cc_env.h" -> "mflags.h" [
  ]
  "cc_lang.cc" [
  ]
  "cc_lang.h" -> "cc_lang.cc" [
    style = dashed
    weight = 10
  ]
  "cc.gr.gen.cc" [
  ]
  "cc.gr.gen.h" -> "cc.gr.gen.cc" [
    style = dashed
    weight = 10
  ]
  "cc_tokens.h" [
    color = white
  ]
  "cc.gr.gen.h" -> "cc_tokens.h" [
  ]
  "ccparse.h" [
    color = white
  ]
  "cc.gr.gen.h" -> "ccparse.h" [
  ]
  "kandr.h" [
    color = white
  ]
  "cc.gr.gen.h" -> "kandr.h" [
  ]
  "cc_elaborate.cc" [
  ]
  "cc_elaborate.h" -> "cc_elaborate.cc" [
    style = dashed
    weight = 10
  ]
  "integrity.cc" [
  ]
  "integrity.h" -> "integrity.cc" [
    style = dashed
    weight = 10
  ]
  "astvisit.h" [
    color = white
  ]
  "integrity.h" -> "astvisit.h" [
  ]
  "xml_file_writer.cc" [
  ]
  "xml_file_writer.h" -> "xml_file_writer.cc" [
    style = dashed
    weight = 10
  ]
  "xml_writer.h" [
    color = white
  ]
  "xml_file_writer.h" -> "xml_writer.h" [
  ]
  "xml_reader.cc" [
  ]
  "xml_reader.h" -> "xml_reader.cc" [
    style = dashed
    weight = 10
  ]
  "id_obj_dict.h" [
    color = white
  ]
  "xml_reader.h" -> "id_obj_dict.h" [
  ]
  "strmap.h" [
    color = white
  ]
  "xml_reader.h" -> "strmap.h" [
  ]
  "xml_lexer.h" [
    color = white
  ]
  "xml_reader.h" -> "xml_lexer.h" [
  ]
  "cc.ast.gen.h" [
    color = white
  ]
  "cc_ast.h" -> "cc.ast.gen.h" [
  ]
  "stdconv.cc" [
  ]
  "stdconv.h" -> "stdconv.cc" [
    style = dashed
    weight = 10
  ]
  "cc_flags.h" [
    label = "cc_flags.h\n(ubiquitous)"
    style = dashed
  ]
  "stdconv.h" -> "cc_flags.h" [
  ]
  "implconv.cc" [
  ]
  "implconv.h" -> "implconv.cc" [
    style = dashed
    weight = 10
  ]
  "implconv.h" -> "stdconv.h" [
  ]
  "overload.cc" [
  ]
  "overload.h" -> "overload.cc" [
    style = dashed
    weight = 10
  ]
  "overload.h" -> "implconv.h" [
  ]
  "lookupset.h" [
    color = white
  ]
  "overload.h" -> "lookupset.h" [
  ]
  "implint.cc" [
  ]
  "implint.h" -> "implint.cc" [
    style = dashed
    weight = 10
  ]
  "ast_build.cc" [
  ]
  "ast_build.h" -> "ast_build.cc" [
    style = dashed
    weight = 10
  ]
  "typelistiter.cc" [
  ]
  "typelistiter.h" -> "typelistiter.cc" [
    style = dashed
    weight = 10
  ]
  "typelistiter.h" -> "overload.h" [
  ]
  "mtype.cc" [
  ]
  "mtype.h" -> "mtype.cc" [
    style = dashed
    weight = 10
  ]
  "mtype.h" -> "mflags.h" [
  ]
  "cc_type.h" [
    label = "cc_type.h\n(ubiquitous)"
    style = dashed
  ]
  "mtype.h" -> "cc_type.h" [
  ]
  "template.h" [
    color = white
  ]
  "mtype.h" -> "template.h" [
  ]
  "parssppt.cc" -> "parssppt.h" [
    weight = 10
  ]
  "lexer.cc" [
  ]
  "lexer.h" -> "lexer.cc" [
    style = dashed
    weight = 10
  ]
  "baselexer.h" [
    color = white
  ]
  "lexer.h" -> "baselexer.h" [
  ]
  "lexer.h" -> "cc_tokens.h" [
  ]
  "cc_env.cc" -> "overload.h" [
  ]
  "cc_env.cc" -> "mtype.h" [
  ]
  "cc_env.cc" -> "implconv.h" [
  ]
  "cc_env.cc" -> "typelistiter.h" [
  ]
  "cc_scope.cc" [
  ]
  "cc_scope.h" -> "cc_scope.cc" [
    style = dashed
    weight = 10
  ]
  "serialno.h" [
    color = white
  ]
  "cc_scope.h" -> "serialno.h" [
  ]
  "cc_scope.h" -> "strmap.h" [
  ]
  "cc_scope.h" -> "lookupset.h" [
  ]
  "cc_err.cc" [
  ]
  "cc_err.h" -> "cc_err.cc" [
    style = dashed
    weight = 10
  ]
  "builtinops.cc" [
  ]
  "builtinops.h" -> "builtinops.cc" [
    style = dashed
    weight = 10
  ]
  "cc.gr.gen.cc" -> "cc.gr.gen.h" [
    weight = 10
  ]
  "cc_tokens.cc" [
  ]
  "cc_tokens.h" -> "cc_tokens.cc" [
    style = dashed
    weight = 10
  ]
  "ccparse.cc" [
  ]
  "ccparse.h" -> "ccparse.cc" [
    style = dashed
    weight = 10
  ]
  "kandr.cc" [
  ]
  "kandr.h" -> "kandr.cc" [
    style = dashed
    weight = 10
  ]
  "cc_elaborate.cc" -> "cc_elaborate.h" [
    weight = 10
  ]
  "cc_elaborate.cc" -> "ast_build.h" [
  ]
  "integrity.cc" -> "integrity.h" [
    weight = 10
  ]
  "astvisit.cc" [
  ]
  "astvisit.h" -> "astvisit.cc" [
    style = dashed
    weight = 10
  ]
  "xml_file_writer.cc" -> "xml_file_writer.h" [
    weight = 10
  ]
  "xml_file_writer.cc" -> "xml_writer.h" [
  ]
  "xml_writer.cc" [
  ]
  "xml_writer.h" -> "xml_writer.cc" [
    style = dashed
    weight = 10
  ]
  "xml_writer.h" -> "strmap.h" [
  ]
  "xml_type_id.h" [
    color = white
  ]
  "xml_writer.h" -> "xml_type_id.h" [
  ]
  "xml_reader.cc" -> "xml_reader.h" [
    weight = 10
  ]
  "id_obj_dict.cc" [
  ]
  "id_obj_dict.h" -> "id_obj_dict.cc" [
    style = dashed
    weight = 10
  ]
  "xml_lexer.cc" [
  ]
  "xml_lexer.h" -> "xml_lexer.cc" [
    style = dashed
    weight = 10
  ]
  "xml_lexer.h" -> "baselexer.h" [
  ]
  "xml_enum.h" [
    color = white
  ]
  "xml_lexer.h" -> "xml_enum.h" [
  ]
  "cc.ast.gen.cc" [
  ]
  "cc.ast.gen.h" -> "cc.ast.gen.cc" [
    style = dashed
    weight = 10
  ]
  "cc_ocaml.h" [
    color = white
  ]
  "cc.ast.gen.h" -> "cc_ocaml.h" [
  ]
  "variable.h" [
    label = "variable.h\n(ubiquitous)"
    style = dashed
  ]
  "cc.ast.gen.h" -> "variable.h" [
  ]
  "cc.ast.gen.h" -> "template.h" [
  ]
  "const_eval.h" [
    color = white
  ]
  "cc.ast.gen.h" -> "const_eval.h" [
  ]
  "cfg.h" [
    color = white
  ]
  "cc.ast.gen.h" -> "cfg.h" [
  ]
  "stdconv.cc" -> "stdconv.h" [
    weight = 10
  ]
  "cc_flags.cc" [
  ]
  "cc_flags.h" -> "cc_flags.cc" [
    style = dashed
    weight = 10
  ]
  "implconv.cc" -> "implconv.h" [
    weight = 10
  ]
  "implconv.cc" -> "overload.h" [
  ]
  "overload.cc" -> "overload.h" [
    weight = 10
  ]
  "overload.cc" -> "typelistiter.h" [
  ]
  "overload.cc" -> "mtype.h" [
  ]
  "lookupset.cc" [
  ]
  "lookupset.h" -> "lookupset.cc" [
    style = dashed
    weight = 10
  ]
  "ast_build.cc" -> "ast_build.h" [
    weight = 10
  ]
  "typelistiter.cc" -> "typelistiter.h" [
    weight = 10
  ]
  "mtype.cc" -> "mtype.h" [
    weight = 10
  ]
  "cc_type.cc" [
  ]
  "cc_type.h" -> "cc_type.cc" [
    style = dashed
    weight = 10
  ]
  "cc_type.h" -> "cc_scope.h" [
  ]
  "cc_type.h" -> "serialno.h" [
  ]
  "cc_type.h" -> "mflags.h" [
  ]
  "template.cc" [
  ]
  "template.h" -> "template.cc" [
    style = dashed
    weight = 10
  ]
  "lexer.cc" -> "lexer.h" [
    weight = 10
  ]
  "baselexer.cc" [
  ]
  "baselexer.h" -> "baselexer.cc" [
    style = dashed
    weight = 10
  ]
  "cc_scope.cc" -> "cc_scope.h" [
    weight = 10
  ]
  "mangle.h" [
    color = white
  ]
  "cc_scope.cc" -> "mangle.h" [
  ]
  "serialno.cc" [
  ]
  "serialno.h" -> "serialno.cc" [
    style = dashed
    weight = 10
  ]
  "cc_err.cc" -> "cc_err.h" [
    weight = 10
  ]
  "builtinops.cc" -> "builtinops.h" [
    weight = 10
  ]
  "builtinops.cc" -> "overload.h" [
  ]
  "cc_tokens.cc" -> "cc_tokens.h" [
    weight = 10
  ]
  "ccparse.cc" -> "ccparse.h" [
    weight = 10
  ]
  "ccparse.cc" -> "astvisit.h" [
  ]
  "kandr.cc" -> "kandr.h" [
    weight = 10
  ]
  "astvisit.cc" -> "astvisit.h" [
    weight = 10
  ]
  "xml_writer.cc" -> "xml_writer.h" [
    weight = 10
  ]
  "xml_type_id.h" -> "template.h" [
  ]
  "id_obj_dict.cc" -> "id_obj_dict.h" [
    weight = 10
  ]
  "xml_lexer.cc" -> "xml_lexer.h" [
    weight = 10
  ]
  "xml_name_1.gen.cc" [
  ]
  "xml_lexer.cc" -> "xml_name_1.gen.cc" [
  ]
  "xml_enum_1.gen.h" [
    color = white
  ]
  "xml_enum.h" -> "xml_enum_1.gen.h" [
  ]
  "cc.ast.gen.cc" -> "cc.ast.gen.h" [
    weight = 10
  ]
  "cc.ast.gen.cc" -> "xml_type_id.h" [
  ]
  "cc_ocaml.cc" [
  ]
  "cc_ocaml.h" -> "cc_ocaml.cc" [
    style = dashed
    weight = 10
  ]
  "cc_ocaml.h" -> "template.h" [
  ]
  "variable.cc" [
  ]
  "variable.h" -> "variable.cc" [
    style = dashed
    weight = 10
  ]
  "variable.h" -> "serialno.h" [
  ]
  "packedword.h" [
    color = white
  ]
  "variable.h" -> "packedword.h" [
  ]
  "const_eval.cc" [
  ]
  "const_eval.h" -> "const_eval.cc" [
    style = dashed
    weight = 10
  ]
  "cfg.cc" [
  ]
  "cfg.h" -> "cfg.cc" [
    style = dashed
    weight = 10
  ]
  "cfg.h" -> "strmap.h" [
  ]
  "lookupset.cc" -> "lookupset.h" [
    weight = 10
  ]
  "lookupset.cc" -> "template.h" [
  ]
  "cc_type.cc" -> "cc_ocaml.h" [
  ]
  "cc_type.cc" -> "template.h" [
  ]
  "cc_type.cc" -> "mtype.h" [
  ]
  "template.cc" -> "template.h" [
    weight = 10
  ]
  "template.cc" -> "overload.h" [
  ]
  "template.cc" -> "typelistiter.h" [
  ]
  "template.cc" -> "mtype.h" [
  ]
  "baselexer.cc" -> "baselexer.h" [
    weight = 10
  ]
  "mangle.cc" [
  ]
  "mangle.h" -> "mangle.cc" [
    style = dashed
    weight = 10
  ]
  "serialno.cc" -> "serialno.h" [
    weight = 10
  ]
  "cc_ocaml.cc" -> "cc_ocaml.h" [
    weight = 10
  ]
  "cc_ocaml.cc" -> "cc.ast.gen.h" [
  ]
  "variable.cc" -> "template.h" [
  ]
  "variable.cc" -> "mangle.h" [
  ]
  "variable.cc" -> "cc_ocaml.h" [
  ]
  "variable.cc" -> "cc.ast.gen.h" [
  ]
  "const_eval.cc" -> "const_eval.h" [
    weight = 10
  ]
  "const_eval.cc" -> "stdconv.h" [
  ]
  "cfg.cc" -> "cfg.h" [
    weight = 10
  ]
  "mangle.cc" -> "mangle.h" [
    weight = 10
  ]
  "mangle.cc" -> "template.h" [
  ]
}

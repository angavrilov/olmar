// gramast.ast            see license.txt for copyright and terms of use
// grammar AST, in a new experimental format

verbatim {
  #include "locstr.h"       // LocString
  #include "asockind.h"     // AssocKind
}

// the entire grammar spec
class GrammarAST (ASTList<Option> options,
                  LocString className,
                  LocString verbatimCode,
                  Terminals terms,
                  ASTList<NontermDecl> nonterms);


// option; for now just a name
class Option (LocString name);


// definition of tokens
class Terminals (ASTList<TermDecl> decls,     // ids and aliases
                 ASTList<TermType> types,     // type annotations
                 ASTList<PrecSpec> prec);     // precedence and associativity

// token with lexer code 'code' and grammar name 'name', with grammar
// alias 'alias'
class TermDecl (int code, LocString name, LocString alias);

// declaration that token with grammar name 'name' has semantic
// values with C type 'type'
class TermType (LocString name, LocString type, ASTList<SpecFunc> funcs);
                
// a set of equal-precedence tokens (named either by name or by alias),
// and the 'kind' which tells how they associate
class PrecSpec (AssocKind kind, ASTList<LocString> tokens);


// specification function: formals + code
class SpecFunc (LocString name, ASTList<LocString> formals, LocString code)
{
  public LocString nthFormal(int i) const
    { return *( formals.nthC(i) ); };
}


// a nonterminal, with its name and semantic value type, and list
// of productions (right-hand side alternatives)
class NontermDecl (LocString name, LocString type, ASTList<SpecFunc> funcs,
                   ASTList<ProdDecl> productions);

// production: rhs description, and code to execute upon recognition
class ProdDecl (ASTList<RHSElt> rhs, LocString actionCode);

// one of the things that appears after the '->', i.e. the
// right-hand-side elements
class RHSElt {
  -> RH_name(LocString tag, LocString name);         // tagged terminal or nonterminal reference
  -> RH_string(LocString tag, LocString str);        // tagged terminal reference by string alias
  -> RH_prec(LocString tokName);                     // %prec specification
}


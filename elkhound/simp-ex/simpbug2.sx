; simpbug2.sx    -*- Lisp -*-
; infinite loop and state corruption bug

notvalid "first" (
  (IMPLIES 
    (AND 
      (EXISTS (address_1 )
        (EQ (selOffset result_1 (sub 0 whole)) (sub address_1 0))
      )
      (EQ mem_24 (updOffset mem_23 (sel result_1 0) 6))
    )
    FALSE
  )
)

; this query causes Simpify to loop, but *only* if the query
; above is issued first; alternatively, with the above query
; disabled, but the goal below changed to use mem_23, this
; loops--unless line *** is removed too
valid "second" (
  (IMPLIES
    (AND
      (uncheckedAccess mem_23)
      (EXISTS (address_1 )
        (EQ (selOffset result_1 (sub 0 whole)) (sub address_1 0))
      )
      (EQ mem_24 (updOffset mem_23 (sel result_1 0) 6))     ; ***
    )
    (okSelOffset mem_24 (sel result_1 0))
  )
)


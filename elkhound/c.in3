// expressions

struct page { int x; };
struct pte_t { int y; };

struct Mystruct {
  int a;
  float b;
  char c;
};

int foo ( )
{
  putc(EOF);
  printf("foo\n");
  sizeof(foo);
  return 1 + 2 * 3 ;

  int dest, a, b;
  ( dest )  = ( a )  & ( b ) ;     // AMBIGUOUS (no longer!)

  sizeof(dest);
  sizeof(bar);
  sizeof(Mystruct);

  int nr;
  nr = ((((  nr  )+ (8*sizeof(long)) -1)/ (8*sizeof(long)) ) *sizeof(long)) ;   // AMBIGUOUS

  // this one is harder because there is a local definition
  // of 'page' as a variable, and a global definition of it
  // as a type
  int pmd;
  pte_t * page = (pte_t *) get_pte_fast();
  (( *pmd ).pmd)  = (0x001  | 0x002  | 0x020  | 0x040 )
    + ((unsigned long)( page )- ((unsigned long)(0xC0000000 ) ) ) ;   // AMBIGUOUS

  enum E { a,b,c };
  
  Mystruct *p;
  sizeof(*p);
  sizeof(p);

  return sizeof(Mystruct);
}


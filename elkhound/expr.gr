# expr.gr
# simple ambiguous expression grammar

S  ->  E  $

E  ->  x
  %action { E.prec = 10 }

E.result  ->  E.left Op E.right
  %action { E.result.prec = Op.prec }
  %condition { (<= E.result.prec E.left.prec) }
  %condition { (< E.result.prec E.right.prec) }
    # left-associative within equal precedence

Op ->  +
  %action { Op.prec = 4 }

Op ->  *
  %action { Op.prec = 5 }

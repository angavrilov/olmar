#!/bin/sh
# setup a parsgen dist to build on linux

# ----------- functions -----------
usage() {
  echo "usage: $0 --ocaml"
  echo "  OR"
  echo "       $0 --nocaml"
  echo "  depending on whether you want Ocaml stuff or not"
  echo ""
  echo "another possible usage is"
  echo "  $0 (--ocaml|--nocaml) --setupMakefile"
  echo "which will simply rengerate Makefile from Makefile.in"
  echo ""
  exit
}

# generate the parsgen Makefile
setupMakefile() {
  mf=Makefile
  echo "creating $mf ..."

  # overcome my chmod below
  rm -f $mf

  echo "# Makefile for parsgen" > $mf || exit
  echo "# NOTE: generated by ./configure -- editing inadvisable" >> $mf
  echo "" >> $mf
  echo "ocaml := $ocaml" >> $mf
  echo "" >> $mf

  # add in the Linux cflags for now..
  cat $mf.in | sed 's/@CCFLAGS@/-D__LINUX__ -D__UNIX__/g' >> $mf

  # discourage editing ..
  chmod a-w $mf
}


# -------- main -----------
if [ "$1" = "--ocaml" ]; then
  ocaml="yes"
elif [ "$1" = "--nocaml" ]; then
  ocaml="no"
else
  usage
fi

# hack so I can run just one function
if [ "$2" = "--setupMakefile" ]; then
  setupMakefile
  exit
fi


# ---------- setup parsgen ----------
# generate Makefile
setupMakefile

# make the symlink in parsgen to smbase
echo "making symlink in parsgen ...."
ln -s ../smbase .


# ---------- setup ml_cil ---------------
# UNMAINTAINED
if [ "$ocaml" = "yes" ]; then
  cd ../ml_cil || exit

  echo "ml_cil: making symlink to ../parsgen/cc.bin ..."
  ln -s ../parsgen/cc.bin . || exit

  echo "ml_cil: creating obj/ and obj/.depend/ ..."
  mkdir obj || exit
  mkdir obj/.depend || exit
fi

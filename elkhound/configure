#!/bin/sh
# setup a parsgen dist to build on linux

# this script is a poor stand-in until I get my act together
# and make a real configure script


usage() {
cat <<EOF
usage: $0 [options]
options:
  -h:      print this message
  -d:      enable debugging options
  <op>:    add a given option to the gcc command line, including forms
           -W*, -pg, -D*, -O*
EOF
}


# defaults
CCFLAGS="-g -Wall -Wno-deprecated -D__LINUX__ -D__UNIX__"
debug=false

# process command-line arguments
while [ "$1" != "" ]; do
  case $1 in
    -h|-help|--help)
      usage
      exit 0
      ;;

    # things that look like options to gcc should just
    # be added to CCFLAGS
    -W*|-pg|-D*|-O*)
      CCFLAGS="$CCFLAGS $1"
      ;;

    -d|-debug)
      debug=true
      ;;
  esac

  shift
done

if $debug; then
  CCFLAGS="$CCFLAGS -DACTION_TRACE=1"
else
  CCFLAGS="$CCFLAGS -O2 -DNDEBUG"
fi


# create a program which will create the Makefile
cat >config.status <<__OUTER_EOF__
#!/bin/sh
# config.status

# this file was created by ./configure

echo "creating Makefile ..."

# overcome my chmod below
rm -f Makefile

cat >Makefile <<EOF
# Makefile for parsgen
# NOTE: generated by ./configure, do not edit

EOF



# add in the Linux cflags for now..
cat Makefile.in | sed "s/@CCFLAGS@/$CCFLAGS/g" >> Makefile

# discourage editing ..
chmod a-w Makefile


# report on configuration
echo "CCFLAGS: $CCFLAGS"

__OUTER_EOF__


# run the output file generator
chmod a+x config.status
./config.status

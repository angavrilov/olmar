// ast.gen.cc
// *** DO NOT EDIT ***
// automatically generated by astgen, from ast.ast

#include "ast.gen.h"      // this module


// ------------------ ASTSpecFile -------------------
// *** DO NOT EDIT ***
ASTSpecFile::~ASTSpecFile()
{
  forms.deleteAll();
}

void ASTSpecFile::debugPrint(ostream &os, int indent) const
{
  PRINT_HEADER(ASTSpecFile);

  PRINT_LIST(ToplevelForm, forms);
}


// ------------------ ToplevelForm -------------------
// *** DO NOT EDIT ***
ToplevelForm::~ToplevelForm()
{
}

void ToplevelForm::debugPrint(ostream &os, int indent) const
{
}

DEFN_AST_DOWNCASTS(ToplevelForm, TF_verbatim, TF_VERBATIM)

TF_verbatim::~TF_verbatim()
{
}

void TF_verbatim::debugPrint(ostream &os, int indent) const
{
  PRINT_HEADER(TF_verbatim);

  ToplevelForm::debugPrint(os, indent);

  PRINT_STRING(code);
}

DEFN_AST_DOWNCASTS(ToplevelForm, ASTClass, ASTCLASS)

ASTClass::~ASTClass()
{
  superCtor.deleteAll();
  decls.deleteAll();
  ctors.deleteAll();
}

void ASTClass::debugPrint(ostream &os, int indent) const
{
  PRINT_HEADER(ASTClass);

  ToplevelForm::debugPrint(os, indent);

  PRINT_STRING(name);
  PRINT_LIST(CtorArg, superCtor);
  PRINT_LIST(UserDecl, decls);
  PRINT_LIST(ASTCtor, ctors);
}


// ------------------ UserDecl -------------------
// *** DO NOT EDIT ***
UserDecl::~UserDecl()
{
}

void UserDecl::debugPrint(ostream &os, int indent) const
{
  PRINT_HEADER(UserDecl);

  PRINT_GENERIC(access);
  PRINT_STRING(code);
}


// ------------------ ASTCtor -------------------
// *** DO NOT EDIT ***
ASTCtor::~ASTCtor()
{
  args.deleteAll();
  decls.deleteAll();
}

void ASTCtor::debugPrint(ostream &os, int indent) const
{
  PRINT_HEADER(ASTCtor);

  PRINT_STRING(name);
  PRINT_LIST(CtorArg, args);
  PRINT_LIST(UserDecl, decls);
}


// ------------------ CtorArg -------------------
// *** DO NOT EDIT ***
CtorArg::~CtorArg()
{
}

void CtorArg::debugPrint(ostream &os, int indent) const
{
  PRINT_HEADER(CtorArg);

  PRINT_BOOL(owner);
  PRINT_STRING(type);
  PRINT_STRING(name);
}



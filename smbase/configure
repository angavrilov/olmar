# configure script for smbase    -*- sh -*-

usage() {
cat <<EOF
usage: $0 [options]
options:
  -h:                print this message
  -debug,-nodebug:   enable/disable debugging options [disabled]
  -prof              enable profiling
  -devel             add options useful while developing smbase
  <op>:              add a given option to the gcc command line,
                       including forms: -W*, -pg, -D*, -O*
EOF
}


# defaults
BASE_FLAGS="-g -Wall -Wno-deprecated -D__UNIX__"
CCFLAGS=""
debug=false
loc=true

# process command-line arguments
while [ "$1" != "" ]; do
  case $1 in
    -h|-help|--help)
      usage
      exit 0
      ;;

    # things that look like options to gcc should just
    # be added to CCFLAGS
    -W*|-pg|-D*|-O*)
      CCFLAGS="$CCFLAGS $1"
      ;;

    -d|-debug)
      debug=true
      ;;

    -nodebug)
      debug=false
      ;;

    -prof)
      CCFLAGS="$CCFLAGS -pg"
      ;;

    -devel)
      CCFLAGS="$CCFLAGS -Werror"
      ;;
  esac

  shift
done

if $debug; then
  true
else
  CCFLAGS="$CCFLAGS -O2 -DNDEBUG"
fi

if [ `uname -s` = 'Linux' ]; then
  CCFLAGS="$CCFLAGS -D__LINUX__"
fi


# ------------------ config.summary -----------------
# create a program to summarize the configuration
cat >config.summary <<EOF
#!/bin/sh
# config.summary

echo "smbase configuration summary:"
echo "  debug:       $debug"
echo ""
echo "Compile flags:"
echo "  BASE_FLAGS:  $BASE_FLAGS"
echo "  CCFLAGS:    $CCFLAGS"
echo ""
EOF

chmod a+x config.summary



# ------------------- config.status ------------------
# from here on, combine BASE_FLAGS and CCFLAGS
CCFLAGS="$BASE_FLAGS$CCFLAGS"

# create a program which will create the Makefile
cat >config.status <<__OUTER_EOF__
#!/bin/sh
# config.status

# this file was created by ./configure

# report on configuration
./config.summary

echo "creating Makefile"

# overcome my chmod below
rm -f Makefile

cat >Makefile <<EOF
# Makefile for parsgen
# NOTE: generated by ./configure, do not edit

EOF


# substitute the CCFLAGS
sed "s/@CCFLAGS@/$CCFLAGS/g" <Makefile.in >>Makefile

# discourage editing ..
chmod a-w Makefile


__OUTER_EOF__


# ----------------- final actions -----------------
# run the output file generator
chmod a+x config.status
./config.status

# I don't think there are GNU-specific things in my Makefile
echo "You can now run make, usually called 'make' or 'gmake'."
